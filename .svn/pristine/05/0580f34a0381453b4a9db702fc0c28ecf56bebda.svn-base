package com.cn.web.controller;

import com.cn.dto.JsonResult;
import com.cn.pojo.User;
import com.cn.service.Zp_UserService;
import com.cn.utils.JwtUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
@Api(tags = "张鹏用户API",value = "zz")
public class Zp_UserController {

    @Autowired
    private Zp_UserService zp_userService;
    /**
     * 登录的方法，通过手机号+密码
     * @return
     */
    @PostMapping("/zp/user/loginByPassword")
    @ApiOperation(value = "登陆方法")
    @ApiImplicitParam
    public JsonResult loginByPassword(Integer phone,String password){
        JsonResult<User> login = zp_userService.login(phone, password);
        //生成token
        String token = JwtUtil.sign(new User(), login.getData().getUserId());
        return new JsonResult(200,"success",token);
    }

    /**
     * 登录的方法，通过手机号+验证码
     * @return
     */
    @GetMapping("/zp/user/loginByCode")
    @ApiOperation(value = "登陆方法")
    @ApiImplicitParam
    public JsonResult loginByCode(){
        return new JsonResult(200,"success");
    }


    /**
     * 注册的方法
     * @param phone:注册用的手机号
     * @param password：注册用的密码
     * @return
     */
    @PostMapping("/zp/user/register")
    @ApiOperation(value = "注册的方法")
    @ApiImplicitParams({
            @ApiImplicitParam(paramType = "query",name = "phone",value = "注册的手机号",required = true,dataType = "int"),
            @ApiImplicitParam(paramType = "query",name = "password",value = "注册的密码",required = true,dataType = "String")
    })
    public JsonResult register(Integer phone,String password){
        return new JsonResult(200,"success",phone);
    }

    /**
     * 查询自己信息的方法
     * @param id：需要的参数
     * @return
     */
    @GetMapping("/zp/user/findMyself")
    @ResponseBody
    @ApiOperation(value = "查询个人信息")
    @ApiImplicitParam(paramType = "query",name="id",value = "查询的id",required = true,dataType = "int")
    public JsonResult findMyself(Integer id){
        return null;
    }

    /**
     * 修改自己的个人信息
     * @param user：修改的类
     * @return
     */
    @GetMapping("/zp/user/updateMyself")
    @ResponseBody
    @ApiOperation(value = "修改个人信息")
    @ApiImplicitParam(paramType = "query",name = "user",value = "修改类")
    public JsonResult updateMyself(User user){
        return null;
    }

    /**
     * 关注用户
     * @param userId
     * @return
     */
    @PostMapping("/user/user")
    @ApiOperation(tags = "罗世杰",value = "关注用户")
    @ApiImplicitParams({
            @ApiImplicitParam(paramType = "query",name = "usreId",value = "用户id",required = true,dataType = "int"),
            @ApiImplicitParam(paramType = "query",name = "followUserId",value = "被关注用户id",required = true,dataType = "int")
    })
    public JsonResult add(Integer userId,Integer followUserId){
        return null;
    }
}
