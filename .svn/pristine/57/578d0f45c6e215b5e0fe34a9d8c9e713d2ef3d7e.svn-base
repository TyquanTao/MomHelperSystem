package com.cn.web.controller;

import com.cn.dto.JsonResult;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * @author Tyquan
 * @date 2019/11/27 15:49
 */
@Controller
@ResponseBody
@Api(tags = "陶仟-问题接口API", value = "QuestionAPI")
public class QuestionController {
    /**
     * 测试
     * @param id
     * @return
     */
    @GetMapping("/question/test")
    @ApiOperation(value = "问题测试方法")
    @ApiImplicitParam(paramType = "query",name = "id",value = "数据id",required = true,dataType = "int")
    public JsonResult testSwagger(Integer id) {
        return new JsonResult(20,"success",id);
    }

    /**
     * 提交问题
     *
     * @param questionTitle 问题标题
     * @param questionContent 问题的内容
     * @return
     */
    @PostMapping("/question/addQuestion")
    @ApiOperation(value = "提交问题接口")
    @ApiImplicitParams({
            @ApiImplicitParam(paramType = "query",name = "questionTitle",value = "问题标题",required = true,dataType = "String"),
            @ApiImplicitParam(paramType = "query",name = "questionContent",value = "问题的内容",required = true,dataType = "String")
    })
    public JsonResult addQuestion(String questionTitle,String questionContent){
        //封装对象
        return null;
    }

    /**
     * 查看问题详情
     * @param questionId
     * @return
     */
    @GetMapping("/question/questionDetail")
    @ApiOperation(value = "问题详情接口")
    @ApiImplicitParam(paramType = "query",name = "questionId",value = "查看问题的问题id",required = true,dataType = "int")
    public JsonResult questionDetail(Integer questionId){
        //封装对象
        return null;
    }

    /**
     * 查看热门问题
     *
     * @return
     */
    @GetMapping("/question/hotQuestion")
    @ApiOperation(value = "查看热门问题接口")
    public JsonResult hotQuestion(){
        //封装对象
        return null;
    }

    /**
     * 查看未解决问题
     *
     * @return
     */
    @GetMapping("/question/unsolvedQuestion")
    @ApiOperation(value = "查看未解决问题接口")
    public JsonResult unsolvedQuestion(){
        //封装对象
        return null;
    }

    /**
     * 普通搜索查询问题
     *
     * @param questionTitle
     * @return
     */
    @GetMapping("/question/ordinarySearch")
    @ApiOperation(value = "问题：普通搜索接口")
    @ApiImplicitParam(paramType = "query",name = "questionTitle",value = "需要查询的内容",required = true,dataType = "String")
    public JsonResult ordinarySearch(String questionTitle){
        //封装对象
        return null;
    }

    /**
     *查看热门搜索（所有用户）
     *
     * @return
     */
    @GetMapping("/question/hotSearch")
    @ApiOperation(value = "问题：热门搜索接口")
    public JsonResult hotSearch(){
        //封装对象
        return null;
    }

    /**
     *查看历史搜索（当前用户）
     *
     * @return
     */
    @GetMapping("/question/historySearch")
    @ApiOperation(value = "问题：历史搜索接口")
    public JsonResult historySearch(){
        //需要user
        return null;
    }

    /**
     *收藏问题
     *
     * @param questionId 收藏的问题id
     * @return
     */
    @GetMapping("/question/collectQuestion")
    @ApiOperation(value = "问题：收藏问题")
    @ApiImplicitParam(paramType = "query",name = "questionId",value = "需要查询的内容",required = true,dataType = "int")
    public JsonResult collectQuestion(Integer questionId){
        //封装对象
        //获得当前用户
        return null;
    }

    /**
     * 问题点赞
     *
     * @param questionId
     * @return
     */
    @GetMapping("/question/praiseQuestion")
    @ApiOperation(value = "给回答点赞接口")
    @ApiImplicitParam(paramType = "query",name = "questionId",value = "要被点赞的问题id",required = true,dataType = "int")
    public JsonResult praiseQuestion(Integer questionId){
        return null;
    }
}
